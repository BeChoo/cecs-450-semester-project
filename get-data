#!/bin/bash
#Grep finds the info block,
#we edit some unecessary lines out,
#then we use tr to remove the newlines;
#We edit those blocks iinto something more usable,
#then we break them back into lines,
#remove junk, and format for the final sed.
#The final sed is a couple big ugly blocks
#these blocks will format everything into awk args.
#Awk combines the information as necessary,
#then it outputs everything into the file.
if [ "$#" -eq 0 ];
then echo "Input file required";
else
ouput_location=$1.csv
grep -Eoz "Now playing.*:[0-9]{2}" $1 |
#Remove channel name lines by matching channel urls to empty lines.
sed -E "/<.*@.*>/,/^$/D"|
#Remove empty lines and occurances of ~ or \t (we need those for later)
sed -E "/^$/D;s/~//g;s/\t//g"|
#Trade newlines for spaces (sed can't match mutliple lines)
tr '\n' ' '|
#Remove multiple spaces
sed -E "s/ {2,}/ /g"|
#'~'s will become newline, put those after the timestamp.
sed -E "s/(:[0-9]{2})/\1~/g"|
#Trade ~ for newline.
tr '~' '\n'|
#Remove stuff without Now playing, views, or .
sed -E "/Now playing/!D;/views/!D;/0:00/D"|
#Remaining stuff should be what we want.
sed -E 's/([0-9\.]+[kKmMbB]? views)/~\1/'|
#This big ugly sed matches all our info into awk args
#We need to do it twice to match videos with(out) descriptions.
#The outputs are:
#   \1      \3        \6      \4      \5    \2
# Title viewcount length uptime uptimeunit link
#We might miss some descriptions if the indicator got deleted.
#It's happened at least once.
sed -E 's/ ?Now playing <[^>]*> ([^<]+) (<[^>]*>)[^~]*~([\.0-9]+[kKmMbB]?) views ([0-9]+) ([A-Za-z]+) ago.*([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2})/\1\t~\3~\t\6\t\4\t\5\t\2/'|
#-----------------number formatting--------------
sed -E 's/(~[0-9]+~)/\1\t1/' |
sed -E 's/(~[0-9\.]+)[kK](.*~)/\1\t1000\2/' |
sed -E 's/(~[0-9\.]+)[mM](.*~)/\1\t1000000\2/'|
sed -E 's/(~[0-9\.]+)[bB](.*~)/\1\t1000000000\2/'|
sed -E 's/~(.*)\.(.*\t1)0(.*)~/\1\2\3/'|
sed -E 's/~//g;s/,//g'|
#------------------------------
#awk formats into csv and prints to output.
awk -F'\t' 'BEGIN {print("title,viewcount,length,uptime,uptimeunit,link")} {printf("%s,%d,%s,%d,%s,%s\n", $1, $2*$3, $4, $5, $6, $7)}'>$output_location;
fi 
